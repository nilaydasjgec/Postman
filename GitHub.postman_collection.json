{
	"info": {
		"_postman_id": "4aecfbd6-b422-4dae-ab6f-0ec7c669cabe",
		"name": "GitHub",
		"description": "GitHub Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GitHub_Connect",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}",
					"host": [
						"{{URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GitHub_GetUserRepos",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/user/repos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"user",
						"repos"
					]
				},
				"description": "Get user repository"
			},
			"response": []
		},
		{
			"name": "GitHub_CreateRepository",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0c586cb7-afa9-4bcf-98b3-6192e9e314bd",
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "Redhat@1992",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{reponame}}\",\r\n  \"description\": \"Dummy Repository from Postman\",\r\n  \"homepage\": \"https://github.com\",\r\n  \"private\": false,\r\n  \"has_issues\": true,\r\n  \"has_projects\": true,\r\n  \"has_wiki\": true\r\n}"
				},
				"url": {
					"raw": "{{URL}}/user/repos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"user",
						"repos"
					]
				},
				"description": "Create a user repository"
			},
			"response": []
		},
		{
			"name": "GitHub_CreateIsuue",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9d489694-681b-49b7-8a34-1bc423af0696",
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "Redhat@1992",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{IssueTitle}}\",\r\n  \"body\": \"This issue has been automatically created by Postman.\"\r\n}"
				},
				"url": {
					"raw": "{{URL}}/repos/:owner/:repo/issues",
					"host": [
						"{{URL}}"
					],
					"path": [
						"repos",
						":owner",
						":repo",
						"issues"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{reponame}}"
						}
					]
				},
				"description": "Create an issue in a repo"
			},
			"response": []
		},
		{
			"name": "GitHub_SelectRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5d199075-beb6-4f51-8f88-fe0bdb74fdbc",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "Redhat@1992",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{URL}}/repos/:owner/:repo",
					"host": [
						"{{URL}}"
					],
					"path": [
						"repos",
						":owner",
						":repo"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{reponame}}"
						}
					]
				},
				"description": "select a specific repo"
			},
			"response": []
		},
		{
			"name": "GitHub_Selectdeleterepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e174b99a-12f9-407e-ad46-3888e07a631f",
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Not Found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "Redhat@1992",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{URL}}/repos/:owner/:repo",
					"host": [
						"{{URL}}"
					],
					"path": [
						"repos",
						":owner",
						":repo"
					],
					"variable": [
						{
							"key": "owner",
							"value": "nilaydasjgec"
						},
						{
							"key": "repo",
							"value": "Hello-World-Nilay"
						}
					]
				},
				"description": "select a deleted repo"
			},
			"response": []
		},
		{
			"name": "GitHub_GetIssue",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "20dbc71c-3770-4e0a-81da-beefbf875e1e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Bug Title Check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(pm.environment.get(\"IssueTitle\"));\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "Redhat@1992",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{URL}}/repos/:owner/:repo/issues/:issue_number",
					"host": [
						"{{URL}}"
					],
					"path": [
						"repos",
						":owner",
						":repo",
						"issues",
						":issue_number"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{reponame}}"
						},
						{
							"key": "issue_number",
							"value": "1"
						}
					]
				},
				"description": "select a specific issue"
			},
			"response": []
		},
		{
			"name": "GitHub_DeleteRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "44599b9e-c9f6-4382-8fb4-e80f00c7b87a",
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "Redhat@1992",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{URL}}/repos/:owner/:repo",
					"host": [
						"{{URL}}"
					],
					"path": [
						"repos",
						":owner",
						":repo"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{reponame}}"
						}
					]
				},
				"description": "Delete a specific repo"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}